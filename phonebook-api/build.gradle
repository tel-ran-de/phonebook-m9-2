plugins {
    id 'org.springframework.boot' version '2.3.0.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
}

group = 'com.telran'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    //  implementation(project(':phonebook-ui'))

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    //  runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'com.h2database:h2'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

test {
    useJUnitPlatform()
}

// ui tasks

ext {
    uiBuildDirectory = "src/main/resources/static"
}

task buildUi {
    dependsOn('copyUiBuild')
    group('build')
}

task copyUiBuild(type: Copy) {
    dependsOn(':phonebook-ui:npm_run_build')
    dependsOn('clearUiBuild')
    from("${project(":phonebook-ui").projectDir}/dist/phonebook-ui")
    into(project.ext.uiBuildDirectory)
}

task clearUiBuild(type: Delete) {
    def files = file(project.ext.uiBuildDirectory).listFiles()
    if (files)
        delete(files)
}

